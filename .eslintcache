[{"/home/raflidev/Documents/DevLearn/react/dakarwan/src/index.js":"1","/home/raflidev/Documents/DevLearn/react/dakarwan/src/App.js":"2","/home/raflidev/Documents/DevLearn/react/dakarwan/src/reportWebVitals.js":"3","/home/raflidev/Documents/DevLearn/react/dakarwan/src/store/index.js":"4","/home/raflidev/Documents/DevLearn/react/dakarwan/src/router/index.js":"5","/home/raflidev/Documents/DevLearn/react/dakarwan/src/views/Home.js":"6","/home/raflidev/Documents/DevLearn/react/dakarwan/src/views/Add.js":"7","/home/raflidev/Documents/DevLearn/react/dakarwan/src/components/Navbar.js":"8"},{"size":574,"mtime":1609389336171,"results":"9","hashOfConfig":"10"},{"size":152,"mtime":1609436388127,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609387728833,"results":"12","hashOfConfig":"10"},{"size":572,"mtime":1609393159341,"results":"13","hashOfConfig":"10"},{"size":603,"mtime":1609404301385,"results":"14","hashOfConfig":"10"},{"size":5797,"mtime":1609399275309,"results":"15","hashOfConfig":"10"},{"size":7844,"mtime":1609436563092,"results":"16","hashOfConfig":"10"},{"size":379,"mtime":1609404208711,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1w13fjf",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/raflidev/Documents/DevLearn/react/dakarwan/src/index.js",[],["36","37"],"/home/raflidev/Documents/DevLearn/react/dakarwan/src/App.js",[],"/home/raflidev/Documents/DevLearn/react/dakarwan/src/reportWebVitals.js",[],"/home/raflidev/Documents/DevLearn/react/dakarwan/src/store/index.js",[],"/home/raflidev/Documents/DevLearn/react/dakarwan/src/router/index.js",[],"/home/raflidev/Documents/DevLearn/react/dakarwan/src/views/Home.js",["38"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport datakaryawan from '../store';\n\nfunction Home() {\n   const data = useRecoilValue(datakaryawan)\n   return (\n      <div>\n         <div className=\"container mx-auto py-5\">\n            <div className=\"font-bold text-3xl\">\n               Data Karyawan\n            </div>\n            <div className=\"my-10\">\n               <NavLink to=\"/add\" className=\"p-3 bg-red-600 text-white rounded-md hover:bg-red-500\">\n                  Tambah Karyawan\n               </NavLink>\n            </div>\n            {/* This example requires Tailwind CSS v2.0+ */}\n            <div className=\"flex flex-col\">\n               <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                  <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                     <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                           <thead className=\"bg-gray-50\">\n                              <tr>\n                                 <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Name\n                      </th>\n                                 <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Title\n                      </th>\n                                 <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Status\n                      </th>\n                                 <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Role\n                      </th>\n                                 <th scope=\"col\" className=\"relative px-6 py-3\">\n                                    <span className=\"sr-only\">Edit</span>\n                                 </th>\n                              </tr>\n                           </thead>\n                           <tbody className=\"bg-white divide-y divide-gray-200\">\n                              {\n                                 data.map((karyawan, index) => {\n                                    return (\n                                       <tr key={index}>\n                                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                                             <div className=\"flex items-center\">\n                                                <div className=\"flex-shrink-0 h-10 w-10\">\n                                                   <img className=\"h-10 w-10 rounded-full\" src=\"https://www.gravatar.com/avatar/f57ab01833402ccd0f7daa934b68a572?s=60\" alt=\"\" />\n                                                </div>\n                                                <div className=\"ml-4\">\n                                                   <div className=\"text-sm font-medium text-gray-900\">\n                                                      {karyawan.name}\n                                                   </div>\n                                                   <div className=\"text-sm text-gray-500\">\n                                                      {karyawan.email}\n                                                   </div>\n                                                </div>\n                                             </div>\n                                          </td>\n                                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                                             <div className=\"text-sm text-gray-900\">{karyawan.title[0]}</div>\n                                             <div className=\"text-sm text-gray-500\">{karyawan.title[1]}</div>\n                                          </td>\n                                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                                             {\n                                                karyawan.active ?\n                                                   <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                                                      Active\n                                </span>\n                                                   :\n                                                   <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800\">\n                                                      Inactive\n                                </span>\n                                             }\n                                          </td>\n                                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                             {karyawan.role}\n                                          </td>\n                                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                                             <a href=\"#\" className=\"text-indigo-600 hover:text-indigo-900\">Edit</a>\n                                          </td>\n                                       </tr>\n                                    )\n                                 })\n                              }\n                           </tbody>\n                        </table>\n                     </div>\n                  </div>\n               </div>\n            </div>\n\n         </div>\n      </div>\n   );\n}\n\nexport default Home;","/home/raflidev/Documents/DevLearn/react/dakarwan/src/views/Add.js",[],"/home/raflidev/Documents/DevLearn/react/dakarwan/src/components/Navbar.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":84,"column":46,"nodeType":"45","endLine":84,"endColumn":108},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]